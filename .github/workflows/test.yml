name: Jest unit tests

on:
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: jest-${{ github.ref }}
  cancel-in-progress: true

jobs:
  jest:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Remove version from package-lock.json
        run: jq 'del(.version, .packages[""].version)' package-lock.json > normalized-package-lock.json

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: normalized-package-lock.json

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Run npm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        uses: nick-fields/retry@3f757583fb1b1f940bc8ef4bf4734c8dc02a5847
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: npm ci

      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@31e91de0f8654375a21e8e83078be625380e2b18

      - name: Cache Jest cache
        id: cache-jest-cache
        uses: actions/cache@v4
        with:
          path: .jest-cache
          key: ${{ runner.os }}-jest

      - name: Run Jest tests
        run: NODE_OPTIONS="$NODE_OPTIONS --experimental-vm-modules" npx jest --silent --max-workers ${{ steps.cpu-cores.outputs.count }}
